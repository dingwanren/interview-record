import{_ as v,p as i,c as t,o as n,e as h,af as f,j as e,t as g,ag as x,n as y,X as w,r as _,G as P,w as S,a as l}from"./chunks/framework.CgLBEkON.js";const V={class:"password-protect"},j={key:0,class:"password-form"},M={key:0},C={key:1,class:"error"},T={key:1,class:"protected-content"},W={__name:"PasswordProtect",props:{password:{type:String,required:!0},title:{type:String,default:"此内容受密码保护"}},setup(s){const u=s,a=i(""),d=i(!1),o=i(""),r=i(!1),p=()=>{a.value===u.password?(d.value=!0,o.value=""):(o.value="密码错误",b())},b=()=>{r.value=!0,setTimeout(()=>{r.value=!1},500)};return(m,c)=>(n(),t("div",V,[d.value?(n(),t("div",T,[_(m.$slots,"default",{},void 0,!0)])):(n(),t("div",j,[s.title?(n(),t("h3",M,g(s.title),1)):h("",!0),f(e("input",{"onUpdate:modelValue":c[0]||(c[0]=k=>a.value=k),type:"password",placeholder:"请输入密码",onKeyup:w(p,["enter"]),class:y({shake:r.value})},null,34),[[x,a.value]]),e("button",{onClick:p},"验证"),o.value?(n(),t("p",C,g(o.value),1)):h("",!0)]))]))}},D=v(W,[["__scopeId","data-v-2ec9cddc"]]),$=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"interview/preparation.md","filePath":"interview/preparation.md"}'),E={name:"interview/preparation.md"},z=Object.assign(E,{setup(s){return(u,a)=>(n(),t("div",null,[P(D,{password:"9527",title:"请输入查看密码"},{default:S(()=>a[0]||(a[0]=[e("h2",{id:"自我介绍",tabindex:"-1"},[l("自我介绍 "),e("a",{class:"header-anchor",href:"#自我介绍","aria-label":'Permalink to "自我介绍"'},"​")],-1),e("p",null,"来自xxx,",-1),e("p",null,"上家公司做的前端开发,参与主要产品和内部平台的开发和维护,都是web项目,",-1),e("p",null,"主要产品,负责5,6个模块和部分公共页的开发和维护,也独立负责了一个内部平台的开发",-1),e("p",null,"都是使用的vue, 我个人比较熟悉vue,虽然没怎么用过react,我觉得我也比较熟悉js,上手也会很快",-1),e("h2",{id:"vue-在渲染过程中-父子组件的生命周期是什么样的-更新的过程",tabindex:"-1"},[l("vue: 在渲染过程中，父子组件的生命周期是什么样的？更新的过程？ "),e("a",{class:"header-anchor",href:"#vue-在渲染过程中-父子组件的生命周期是什么样的-更新的过程","aria-label":'Permalink to "vue: 在渲染过程中，父子组件的生命周期是什么样的？更新的过程？"'},"​")],-1),e("p",null,"当父子组件首次渲染时，生命周期钩子的执行顺序如下",-1),e("ul",null,[e("li",null,"父 beforeCreate->父 created->父 beforeMount->子 beforeCreate->子 created->子 beforeMount->子 mounted->父 mounted")],-1),e("p",null,"当父组件状态变化导致重新渲染时：",-1),e("ul",null,[e("li",null,"父 beforeUpdate->子 beforeUpdate->子 updated->父 updated")],-1),e("p",null,"当父组件销毁时：",-1),e("ul",null,[e("li",null,"父 beforeDestroy->子 beforeDestroy->子 destroyed->父 destroyed")],-1),e("h2",{id:"vue-v-model是什么东西",tabindex:"-1"},[l("vue:v-model是什么东西 "),e("a",{class:"header-anchor",href:"#vue-v-model是什么东西","aria-label":'Permalink to "vue:v-model是什么东西"'},"​")],-1),e("p",null,[l("用于实现"),e("strong",null,"双向数据绑定"),l("的指令，本质上是一个语法糖")],-1),e("p",null,"v-model 的工作原理可以概括为：",-1),e("ol",null,[e("li",null,[e("strong",null,"数据到视图"),l("：通过 "),e("code",null,"v-bind"),l(" 将数据绑定到表单元素的 value/checked 等属性")]),e("li",null,[e("strong",null,"视图到数据"),l("：通过 "),e("code",null,"v-on"),l(" 监听输入事件（如 input、change）来更新数据")]),e("li",null,[l("相当于帮你做了这样的操作: "),e("strong",null,"文本输入框（input/textarea）"),l("：绑定 "),e("code",null,"value"),l(" 属性，监听 "),e("code",null,"input"),l(" 事件,"),e("strong",null,"复选框（checkbox）"),l("：绑定 "),e("code",null,"checked"),l(" 属性，监听 "),e("code",null,"change"),l(" 事件")])],-1),e("p",null,[e("strong",null,"自定义组件上的 v-model"),l(" 在 Vue2 中，自定义组件使用 v-model 需要：")],-1),e("ol",null,[e("li",null,[l("接收一个名为 "),e("code",null,"value"),l(" 的 prop")]),e("li",null,[l("在需要更新值时触发 "),e("code",null,"input"),l(" 事件")])],-1),e("h3",{id:"sync-修饰符",tabindex:"-1"},[l(".sync 修饰符 "),e("a",{class:"header-anchor",href:"#sync-修饰符","aria-label":'Permalink to ".sync 修饰符"'},"​")],-1),e("p",null,[l("Vue2 还提供了 "),e("code",null,".sync"),l(' 修饰符作为 v-model 的替代方案，允许"双向绑定"多个 prop：')],-1),e("div",{class:"language- vp-adaptive-theme"},[e("button",{title:"Copy Code",class:"copy"}),e("span",{class:"lang"}),e("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[e("code",null,[e("span",{class:"line"},[e("span",null,'<child-component :title.sync="pageTitle"></child-component>')]),l(`
`),e("span",{class:"line"},[e("span",null,"<!-- 等价于 -->")]),l(`
`),e("span",{class:"line"},[e("span",null,"<child-component ")]),l(`
`),e("span",{class:"line"},[e("span",null,'  :title="pageTitle" ')]),l(`
`),e("span",{class:"line"},[e("span",null,'  @update:title="pageTitle = $event">')]),l(`
`),e("span",{class:"line"},[e("span",null,"</child-component>")])])])],-1),e("p",null,[l("子组件通过 "),e("code",null,"this.$emit('update:title', newTitle)"),l(" 来更新")],-1),e("p",null,[l("Vue3 里的: "),e("strong",null,"默认 prop 和事件名变更"),l("：")],-1),e("ul",null,[e("li",null,[l("默认 prop 名从 "),e("code",null,"value"),l(" 改为 "),e("code",null,"modelValue")]),e("li",null,[l("默认事件名从 "),e("code",null,"input"),l(" 改为 "),e("code",null,"update:modelValue")]),e("li",null,"移除sync修饰符")],-1),e("h2",{id:"vue-nextick做什么的-怎么实现的",tabindex:"-1"},[l("vue:nextick做什么的？怎么实现的 "),e("a",{class:"header-anchor",href:"#vue-nextick做什么的-怎么实现的","aria-label":'Permalink to "vue:nextick做什么的？怎么实现的"'},"​")],-1),e("h2",{id:"浏览器-a标签与b标签通信-sessionstorage怎么样可以不同标签共享",tabindex:"-1"},[l("浏览器：a标签与b标签通信，sessionstorage怎么样可以不同标签共享 "),e("a",{class:"header-anchor",href:"#浏览器-a标签与b标签通信-sessionstorage怎么样可以不同标签共享","aria-label":'Permalink to "浏览器：a标签与b标签通信，sessionstorage怎么样可以不同标签共享"'},"​")],-1),e("p",null,"不能吧,",-1),e("p",null,[e("strong",null,"sessionStorage 不能在多个窗口或标签页之间共享数据，但是当通过 window.open 或链接打开新页面时(不能是新窗口)，新页面会复制前一页的 sessionStorage。"),l("(协议,域名,端口都会产生不同的域, 页面关闭就清除对应的域)")],-1),e("h2",{id:"es6-map与weakmap-有什么区别",tabindex:"-1"},[l("es6:Map与weakMap 有什么区别 "),e("a",{class:"header-anchor",href:"#es6-map与weakmap-有什么区别","aria-label":'Permalink to "es6:Map与weakMap 有什么区别"'},"​")],-1),e("table",{tabindex:"0"},[e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"特性"),e("th",{style:{"text-align":"left"}},"Map"),e("th",{style:{"text-align":"left"}},"WeakMap")])]),e("tbody",null,[e("tr",null,[e("td",{style:{"text-align":"left"}},"键类型"),e("td",{style:{"text-align":"left"}},"任意类型"),e("td",{style:{"text-align":"left"}},"只能是对象（不包括基本类型）")]),e("tr",null,[e("td",{style:{"text-align":"left"}},"垃圾回收"),e("td",{style:{"text-align":"left"}},"不会自动释放内存"),e("td",{style:{"text-align":"left"}},"键对象无引用时自动回收")]),e("tr",null,[e("td",{style:{"text-align":"left"}},"可枚举性"),e("td",{style:{"text-align":"left"}},"可遍历（keys/values/entries）"),e("td",{style:{"text-align":"left"}},"不可遍历")]),e("tr",null,[e("td",{style:{"text-align":"left"}},"大小查询"),e("td",{style:{"text-align":"left"}},"有 size 属性"),e("td",{style:{"text-align":"left"}},"无 size 属性")])])],-1),e("h2",{id:"webpack-loader-与plugin-有什么区别-为什么需要loader的",tabindex:"-1"},[l("webpack:loader 与plugin 有什么区别？为什么需要loader的 "),e("a",{class:"header-anchor",href:"#webpack-loader-与plugin-有什么区别-为什么需要loader的","aria-label":'Permalink to "webpack:loader 与plugin 有什么区别？为什么需要loader的"'},"​")],-1),e("p",null,"loader:让webpack能够处理非js文件(自身职能理解js)，转换成js,然后你就可以利用 webpack 的打包能力，对它们进行处理。 例如：css-loader、style-loader、postcss-loader、sass-loader",-1),e("p",null,"plugins:从打包优化和压缩，一直到重新定义环境中的变量.比如 生成HTML文件需要使用HtmlWebpackPlugin 例如：uglify-webpack-plugin、clean-webpack-plugin、babel-polyfill",-1),e("h2",{id:"webpack-treeshaking怎么实现的",tabindex:"-1"},[l("webpack:treeshaking怎么实现的 "),e("a",{class:"header-anchor",href:"#webpack-treeshaking怎么实现的","aria-label":'Permalink to "webpack:treeshaking怎么实现的"'},"​")],-1),e("p",null,"webpack实现tree shaking的原理是基于ES6模块化语法的静态特性。",-1),e("p",null,"在编译阶段，Webpack会根据模块的依赖关系，通过AST（抽象语法树）进行静态分析，识别出那些代码块（函数、变量、对象等）被引用并且使用了。然后将这些代码块打包输出到最终的打包文件中。在这个过程中，Webpack会自动将未被引用的代码块进行剔除，这个过程就是tree shaking。",-1),e("p",null,"具体来说，当Webpack在打包时遇到一个ES6模块导入语句（import），它会自动去加载这个模块并分析其导出对象。然后它会分析项目中哪些导出对象被引用了。如果一个导出对象没有被引用，那么Webpack会直接把它从最终的代码中剔除掉。",-1),e("p",null,"需要注意的是，tree shaking只对ES6模块生效，对于CommonJS等其他模块化规范，由于其动态加载特性，无法在静态分析阶段确定哪些代码块被引用，因此无法进行tree shaking。",-1),e("p",null,"另外，为了使Webpack能够正确识别和剔除未引用的代码块，开发者也需要做出一定的努力，例如将代码编写为纯函数的形式，避免使用全局变量等副作用等。",-1),e("h2",{id:"换肤功能怎么实现",tabindex:"-1"},[l("换肤功能怎么实现 "),e("a",{class:"header-anchor",href:"#换肤功能怎么实现","aria-label":'Permalink to "换肤功能怎么实现"'},"​")],-1),e("p",null,"用到scss, 在html元素上 setAttribute('theme-mode'), 写样式的使用 用属性选择器[theme-mode='light'] 匹配样式即可, 可以按主题分开放样式文件,比较好维护",-1),e("h2",{id:"tsconfig-json-配置",tabindex:"-1"},[l("tsconfig.json 配置 "),e("a",{class:"header-anchor",href:"#tsconfig-json-配置","aria-label":'Permalink to "tsconfig.json 配置"'},"​")],-1),e("h2",{id:"vue2到vue3变了什么东西",tabindex:"-1"},[l("vue2到vue3变了什么东西 "),e("a",{class:"header-anchor",href:"#vue2到vue3变了什么东西","aria-label":'Permalink to "vue2到vue3变了什么东西"'},"​")],-1),e("p",null,"v-model 从绑定 value 和input 事件, 变成 modelValue 和 update:modelValue",-1),e("p",null,".sync 去除",-1),e("p",null,"filter去除,可用methods 或 computed",-1),e("p",null,"新的改用composition api, 旧的继续先保持options写法 新版没有this, 方法还要 defineExpose 出去, 才能被调用",-1),e("p",null,"computed watch等变成按需引入",-1),e("p",null,"composition api生命周期和options 不一样",-1),e("p",null,"##想反问的东西",-1),e("p",null,"评价一下我的表现,有什么不足之处呢",-1),e("p",null,"想了解一下贵司react的使用情况,大概会到什么水平可以胜任岗位呢",-1)])),_:1})]))}});export{$ as __pageData,z as default};
